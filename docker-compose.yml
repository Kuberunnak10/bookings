version: '3.7'
services:
#  nginx:
#    build:
#      context: .
#      dockerfile: 'Dockerfile.nginx'
#    container_name: booking_nginx
#    ports:
#      - '80:80'
#      - '443:443'
#    links:
#      - booking
  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - '5432:5432'
    restart: always

  redis:
    image: redis:7
    container_name: booking_redis
    restart: always

  booking:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - '9000:8000'
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking_celery
    command: sh -c "celery --app=app.tasks.celery_app:celery worker -l INFO"
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    restart: always

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking_flower
    command: sh -c "celery --app=app.tasks.celery_app:celery flower"
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    ports:
      - '5555:5555'
    restart: always

#  prometheus:
#   image: prom/prometheus:v2.43.0
#   container_name: prometheus
#   volumes:
#     - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     - prometheusdata:/prometheus
#   restart: unless-stopped
#   ports:
#     - '9090:9090'
#
#  grafana:
#   image: grafana/grafana:9.4.7
#   container_name: grafana
#   volumes:
#     - grafanadata:/var/lib/grafana
#   restart: unless-stopped
#   ports:
#     - '3000:3000'

volumes:
  postgresdata:
#  grafanadata:
#  prometheusdata: